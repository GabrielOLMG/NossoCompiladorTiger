Terminals unused in grammar

    IF
    THEN
    ELSE


State 25 conflicts: 8 shift/reduce
State 26 conflicts: 8 shift/reduce
State 27 conflicts: 8 shift/reduce
State 28 conflicts: 8 shift/reduce
State 29 conflicts: 8 shift/reduce
State 30 conflicts: 8 shift/reduce
State 32 conflicts: 8 shift/reduce
State 34 conflicts: 8 shift/reduce
State 35 conflicts: 8 shift/reduce
State 37 conflicts: 8 shift/reduce
State 38 conflicts: 8 shift/reduce


Grammar

    0 $accept: programa $end

    1 programa: %empty
    2         | new_line programa

    3 new_line: exp
    4         | T_NEWLINE

    5 exp: term
    6    | '(' exp_seq ')'
    7    | TOK_CHAR ':' '=' exp
    8    | exp '+' exp
    9    | exp '-' exp
   10    | exp '/' exp
   11    | exp '%' exp
   12    | exp '*' exp
   13    | exp '>' exp
   14    | exp '<' exp
   15    | exp '=' exp
   16    | exp '>' '=' exp
   17    | exp '<' '=' exp

   18 exp_seq: exp
   19        | exp_seq ';' exp

   20 term: TOK_NUM
   21     | TOK_CHAR


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 11
    '(' (40) 6
    ')' (41) 6
    '*' (42) 12
    '+' (43) 8
    '-' (45) 9
    '/' (47) 10
    ':' (58) 7
    ';' (59) 19
    '<' (60) 14 17
    '=' (61) 7 15 16 17
    '>' (62) 13 16
    error (256)
    TOK_NUM <ival> (258) 20
    TOK_CHAR <sval> (259) 7 21
    T_NEWLINE (260) 4
    IF (261)
    THEN (262)
    ELSE (263)


Nonterminals, with rules where they appear

    $accept (21)
        on left: 0
    programa (22)
        on left: 1 2
        on right: 0 2
    new_line (23)
        on left: 3 4
        on right: 2
    exp <exp_> (24)
        on left: 5 6 7 8 9 10 11 12 13 14 15 16 17
        on right: 3 7 8 9 10 11 12 13 14 15 16 17 18 19
    exp_seq <exp_> (25)
        on left: 18 19
        on right: 6 19
    term <exp_> (26)
        on left: 20 21
        on right: 5


State 0

    0 $accept: . programa $end

    TOK_NUM    shift, and go to state 1
    TOK_CHAR   shift, and go to state 2
    T_NEWLINE  shift, and go to state 3
    '('        shift, and go to state 4

    $default  reduce using rule 1 (programa)

    programa  go to state 5
    new_line  go to state 6
    exp       go to state 7
    term      go to state 8


State 1

   20 term: TOK_NUM .

    $default  reduce using rule 20 (term)


State 2

    7 exp: TOK_CHAR . ':' '=' exp
   21 term: TOK_CHAR .

    ':'  shift, and go to state 9

    $default  reduce using rule 21 (term)


State 3

    4 new_line: T_NEWLINE .

    $default  reduce using rule 4 (new_line)


State 4

    6 exp: '(' . exp_seq ')'

    TOK_NUM   shift, and go to state 1
    TOK_CHAR  shift, and go to state 2
    '('       shift, and go to state 4

    exp      go to state 10
    exp_seq  go to state 11
    term     go to state 8


State 5

    0 $accept: programa . $end

    $end  shift, and go to state 12


State 6

    2 programa: new_line . programa

    TOK_NUM    shift, and go to state 1
    TOK_CHAR   shift, and go to state 2
    T_NEWLINE  shift, and go to state 3
    '('        shift, and go to state 4

    $default  reduce using rule 1 (programa)

    programa  go to state 13
    new_line  go to state 6
    exp       go to state 7
    term      go to state 8


State 7

    3 new_line: exp .
    8 exp: exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '/' exp
   11    | exp . '%' exp
   12    | exp . '*' exp
   13    | exp . '>' exp
   14    | exp . '<' exp
   15    | exp . '=' exp
   16    | exp . '>' '=' exp
   17    | exp . '<' '=' exp

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '/'  shift, and go to state 17
    '%'  shift, and go to state 18
    '*'  shift, and go to state 19
    '>'  shift, and go to state 20
    '<'  shift, and go to state 21

    $default  reduce using rule 3 (new_line)


State 8

    5 exp: term .

    $default  reduce using rule 5 (exp)


State 9

    7 exp: TOK_CHAR ':' . '=' exp

    '='  shift, and go to state 22


State 10

    8 exp: exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '/' exp
   11    | exp . '%' exp
   12    | exp . '*' exp
   13    | exp . '>' exp
   14    | exp . '<' exp
   15    | exp . '=' exp
   16    | exp . '>' '=' exp
   17    | exp . '<' '=' exp
   18 exp_seq: exp .

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '/'  shift, and go to state 17
    '%'  shift, and go to state 18
    '*'  shift, and go to state 19
    '>'  shift, and go to state 20
    '<'  shift, and go to state 21

    $default  reduce using rule 18 (exp_seq)


State 11

    6 exp: '(' exp_seq . ')'
   19 exp_seq: exp_seq . ';' exp

    ')'  shift, and go to state 23
    ';'  shift, and go to state 24


State 12

    0 $accept: programa $end .

    $default  accept


State 13

    2 programa: new_line programa .

    $default  reduce using rule 2 (programa)


State 14

   15 exp: exp '=' . exp

    TOK_NUM   shift, and go to state 1
    TOK_CHAR  shift, and go to state 2
    '('       shift, and go to state 4

    exp   go to state 25
    term  go to state 8


State 15

    8 exp: exp '+' . exp

    TOK_NUM   shift, and go to state 1
    TOK_CHAR  shift, and go to state 2
    '('       shift, and go to state 4

    exp   go to state 26
    term  go to state 8


State 16

    9 exp: exp '-' . exp

    TOK_NUM   shift, and go to state 1
    TOK_CHAR  shift, and go to state 2
    '('       shift, and go to state 4

    exp   go to state 27
    term  go to state 8


State 17

   10 exp: exp '/' . exp

    TOK_NUM   shift, and go to state 1
    TOK_CHAR  shift, and go to state 2
    '('       shift, and go to state 4

    exp   go to state 28
    term  go to state 8


State 18

   11 exp: exp '%' . exp

    TOK_NUM   shift, and go to state 1
    TOK_CHAR  shift, and go to state 2
    '('       shift, and go to state 4

    exp   go to state 29
    term  go to state 8


State 19

   12 exp: exp '*' . exp

    TOK_NUM   shift, and go to state 1
    TOK_CHAR  shift, and go to state 2
    '('       shift, and go to state 4

    exp   go to state 30
    term  go to state 8


State 20

   13 exp: exp '>' . exp
   16    | exp '>' . '=' exp

    TOK_NUM   shift, and go to state 1
    TOK_CHAR  shift, and go to state 2
    '('       shift, and go to state 4
    '='       shift, and go to state 31

    exp   go to state 32
    term  go to state 8


State 21

   14 exp: exp '<' . exp
   17    | exp '<' . '=' exp

    TOK_NUM   shift, and go to state 1
    TOK_CHAR  shift, and go to state 2
    '('       shift, and go to state 4
    '='       shift, and go to state 33

    exp   go to state 34
    term  go to state 8


State 22

    7 exp: TOK_CHAR ':' '=' . exp

    TOK_NUM   shift, and go to state 1
    TOK_CHAR  shift, and go to state 2
    '('       shift, and go to state 4

    exp   go to state 35
    term  go to state 8


State 23

    6 exp: '(' exp_seq ')' .

    $default  reduce using rule 6 (exp)


State 24

   19 exp_seq: exp_seq ';' . exp

    TOK_NUM   shift, and go to state 1
    TOK_CHAR  shift, and go to state 2
    '('       shift, and go to state 4

    exp   go to state 36
    term  go to state 8


State 25

    8 exp: exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '/' exp
   11    | exp . '%' exp
   12    | exp . '*' exp
   13    | exp . '>' exp
   14    | exp . '<' exp
   15    | exp . '=' exp
   15    | exp '=' exp .
   16    | exp . '>' '=' exp
   17    | exp . '<' '=' exp

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '/'  shift, and go to state 17
    '%'  shift, and go to state 18
    '*'  shift, and go to state 19
    '>'  shift, and go to state 20
    '<'  shift, and go to state 21

    '='       [reduce using rule 15 (exp)]
    '+'       [reduce using rule 15 (exp)]
    '-'       [reduce using rule 15 (exp)]
    '/'       [reduce using rule 15 (exp)]
    '%'       [reduce using rule 15 (exp)]
    '*'       [reduce using rule 15 (exp)]
    '>'       [reduce using rule 15 (exp)]
    '<'       [reduce using rule 15 (exp)]
    $default  reduce using rule 15 (exp)


State 26

    8 exp: exp . '+' exp
    8    | exp '+' exp .
    9    | exp . '-' exp
   10    | exp . '/' exp
   11    | exp . '%' exp
   12    | exp . '*' exp
   13    | exp . '>' exp
   14    | exp . '<' exp
   15    | exp . '=' exp
   16    | exp . '>' '=' exp
   17    | exp . '<' '=' exp

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '/'  shift, and go to state 17
    '%'  shift, and go to state 18
    '*'  shift, and go to state 19
    '>'  shift, and go to state 20
    '<'  shift, and go to state 21

    '='       [reduce using rule 8 (exp)]
    '+'       [reduce using rule 8 (exp)]
    '-'       [reduce using rule 8 (exp)]
    '/'       [reduce using rule 8 (exp)]
    '%'       [reduce using rule 8 (exp)]
    '*'       [reduce using rule 8 (exp)]
    '>'       [reduce using rule 8 (exp)]
    '<'       [reduce using rule 8 (exp)]
    $default  reduce using rule 8 (exp)


State 27

    8 exp: exp . '+' exp
    9    | exp . '-' exp
    9    | exp '-' exp .
   10    | exp . '/' exp
   11    | exp . '%' exp
   12    | exp . '*' exp
   13    | exp . '>' exp
   14    | exp . '<' exp
   15    | exp . '=' exp
   16    | exp . '>' '=' exp
   17    | exp . '<' '=' exp

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '/'  shift, and go to state 17
    '%'  shift, and go to state 18
    '*'  shift, and go to state 19
    '>'  shift, and go to state 20
    '<'  shift, and go to state 21

    '='       [reduce using rule 9 (exp)]
    '+'       [reduce using rule 9 (exp)]
    '-'       [reduce using rule 9 (exp)]
    '/'       [reduce using rule 9 (exp)]
    '%'       [reduce using rule 9 (exp)]
    '*'       [reduce using rule 9 (exp)]
    '>'       [reduce using rule 9 (exp)]
    '<'       [reduce using rule 9 (exp)]
    $default  reduce using rule 9 (exp)


State 28

    8 exp: exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '/' exp
   10    | exp '/' exp .
   11    | exp . '%' exp
   12    | exp . '*' exp
   13    | exp . '>' exp
   14    | exp . '<' exp
   15    | exp . '=' exp
   16    | exp . '>' '=' exp
   17    | exp . '<' '=' exp

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '/'  shift, and go to state 17
    '%'  shift, and go to state 18
    '*'  shift, and go to state 19
    '>'  shift, and go to state 20
    '<'  shift, and go to state 21

    '='       [reduce using rule 10 (exp)]
    '+'       [reduce using rule 10 (exp)]
    '-'       [reduce using rule 10 (exp)]
    '/'       [reduce using rule 10 (exp)]
    '%'       [reduce using rule 10 (exp)]
    '*'       [reduce using rule 10 (exp)]
    '>'       [reduce using rule 10 (exp)]
    '<'       [reduce using rule 10 (exp)]
    $default  reduce using rule 10 (exp)


State 29

    8 exp: exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '/' exp
   11    | exp . '%' exp
   11    | exp '%' exp .
   12    | exp . '*' exp
   13    | exp . '>' exp
   14    | exp . '<' exp
   15    | exp . '=' exp
   16    | exp . '>' '=' exp
   17    | exp . '<' '=' exp

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '/'  shift, and go to state 17
    '%'  shift, and go to state 18
    '*'  shift, and go to state 19
    '>'  shift, and go to state 20
    '<'  shift, and go to state 21

    '='       [reduce using rule 11 (exp)]
    '+'       [reduce using rule 11 (exp)]
    '-'       [reduce using rule 11 (exp)]
    '/'       [reduce using rule 11 (exp)]
    '%'       [reduce using rule 11 (exp)]
    '*'       [reduce using rule 11 (exp)]
    '>'       [reduce using rule 11 (exp)]
    '<'       [reduce using rule 11 (exp)]
    $default  reduce using rule 11 (exp)


State 30

    8 exp: exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '/' exp
   11    | exp . '%' exp
   12    | exp . '*' exp
   12    | exp '*' exp .
   13    | exp . '>' exp
   14    | exp . '<' exp
   15    | exp . '=' exp
   16    | exp . '>' '=' exp
   17    | exp . '<' '=' exp

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '/'  shift, and go to state 17
    '%'  shift, and go to state 18
    '*'  shift, and go to state 19
    '>'  shift, and go to state 20
    '<'  shift, and go to state 21

    '='       [reduce using rule 12 (exp)]
    '+'       [reduce using rule 12 (exp)]
    '-'       [reduce using rule 12 (exp)]
    '/'       [reduce using rule 12 (exp)]
    '%'       [reduce using rule 12 (exp)]
    '*'       [reduce using rule 12 (exp)]
    '>'       [reduce using rule 12 (exp)]
    '<'       [reduce using rule 12 (exp)]
    $default  reduce using rule 12 (exp)


State 31

   16 exp: exp '>' '=' . exp

    TOK_NUM   shift, and go to state 1
    TOK_CHAR  shift, and go to state 2
    '('       shift, and go to state 4

    exp   go to state 37
    term  go to state 8


State 32

    8 exp: exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '/' exp
   11    | exp . '%' exp
   12    | exp . '*' exp
   13    | exp . '>' exp
   13    | exp '>' exp .
   14    | exp . '<' exp
   15    | exp . '=' exp
   16    | exp . '>' '=' exp
   17    | exp . '<' '=' exp

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '/'  shift, and go to state 17
    '%'  shift, and go to state 18
    '*'  shift, and go to state 19
    '>'  shift, and go to state 20
    '<'  shift, and go to state 21

    '='       [reduce using rule 13 (exp)]
    '+'       [reduce using rule 13 (exp)]
    '-'       [reduce using rule 13 (exp)]
    '/'       [reduce using rule 13 (exp)]
    '%'       [reduce using rule 13 (exp)]
    '*'       [reduce using rule 13 (exp)]
    '>'       [reduce using rule 13 (exp)]
    '<'       [reduce using rule 13 (exp)]
    $default  reduce using rule 13 (exp)


State 33

   17 exp: exp '<' '=' . exp

    TOK_NUM   shift, and go to state 1
    TOK_CHAR  shift, and go to state 2
    '('       shift, and go to state 4

    exp   go to state 38
    term  go to state 8


State 34

    8 exp: exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '/' exp
   11    | exp . '%' exp
   12    | exp . '*' exp
   13    | exp . '>' exp
   14    | exp . '<' exp
   14    | exp '<' exp .
   15    | exp . '=' exp
   16    | exp . '>' '=' exp
   17    | exp . '<' '=' exp

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '/'  shift, and go to state 17
    '%'  shift, and go to state 18
    '*'  shift, and go to state 19
    '>'  shift, and go to state 20
    '<'  shift, and go to state 21

    '='       [reduce using rule 14 (exp)]
    '+'       [reduce using rule 14 (exp)]
    '-'       [reduce using rule 14 (exp)]
    '/'       [reduce using rule 14 (exp)]
    '%'       [reduce using rule 14 (exp)]
    '*'       [reduce using rule 14 (exp)]
    '>'       [reduce using rule 14 (exp)]
    '<'       [reduce using rule 14 (exp)]
    $default  reduce using rule 14 (exp)


State 35

    7 exp: TOK_CHAR ':' '=' exp .
    8    | exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '/' exp
   11    | exp . '%' exp
   12    | exp . '*' exp
   13    | exp . '>' exp
   14    | exp . '<' exp
   15    | exp . '=' exp
   16    | exp . '>' '=' exp
   17    | exp . '<' '=' exp

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '/'  shift, and go to state 17
    '%'  shift, and go to state 18
    '*'  shift, and go to state 19
    '>'  shift, and go to state 20
    '<'  shift, and go to state 21

    '='       [reduce using rule 7 (exp)]
    '+'       [reduce using rule 7 (exp)]
    '-'       [reduce using rule 7 (exp)]
    '/'       [reduce using rule 7 (exp)]
    '%'       [reduce using rule 7 (exp)]
    '*'       [reduce using rule 7 (exp)]
    '>'       [reduce using rule 7 (exp)]
    '<'       [reduce using rule 7 (exp)]
    $default  reduce using rule 7 (exp)


State 36

    8 exp: exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '/' exp
   11    | exp . '%' exp
   12    | exp . '*' exp
   13    | exp . '>' exp
   14    | exp . '<' exp
   15    | exp . '=' exp
   16    | exp . '>' '=' exp
   17    | exp . '<' '=' exp
   19 exp_seq: exp_seq ';' exp .

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '/'  shift, and go to state 17
    '%'  shift, and go to state 18
    '*'  shift, and go to state 19
    '>'  shift, and go to state 20
    '<'  shift, and go to state 21

    $default  reduce using rule 19 (exp_seq)


State 37

    8 exp: exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '/' exp
   11    | exp . '%' exp
   12    | exp . '*' exp
   13    | exp . '>' exp
   14    | exp . '<' exp
   15    | exp . '=' exp
   16    | exp . '>' '=' exp
   16    | exp '>' '=' exp .
   17    | exp . '<' '=' exp

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '/'  shift, and go to state 17
    '%'  shift, and go to state 18
    '*'  shift, and go to state 19
    '>'  shift, and go to state 20
    '<'  shift, and go to state 21

    '='       [reduce using rule 16 (exp)]
    '+'       [reduce using rule 16 (exp)]
    '-'       [reduce using rule 16 (exp)]
    '/'       [reduce using rule 16 (exp)]
    '%'       [reduce using rule 16 (exp)]
    '*'       [reduce using rule 16 (exp)]
    '>'       [reduce using rule 16 (exp)]
    '<'       [reduce using rule 16 (exp)]
    $default  reduce using rule 16 (exp)


State 38

    8 exp: exp . '+' exp
    9    | exp . '-' exp
   10    | exp . '/' exp
   11    | exp . '%' exp
   12    | exp . '*' exp
   13    | exp . '>' exp
   14    | exp . '<' exp
   15    | exp . '=' exp
   16    | exp . '>' '=' exp
   17    | exp . '<' '=' exp
   17    | exp '<' '=' exp .

    '='  shift, and go to state 14
    '+'  shift, and go to state 15
    '-'  shift, and go to state 16
    '/'  shift, and go to state 17
    '%'  shift, and go to state 18
    '*'  shift, and go to state 19
    '>'  shift, and go to state 20
    '<'  shift, and go to state 21

    '='       [reduce using rule 17 (exp)]
    '+'       [reduce using rule 17 (exp)]
    '-'       [reduce using rule 17 (exp)]
    '/'       [reduce using rule 17 (exp)]
    '%'       [reduce using rule 17 (exp)]
    '*'       [reduce using rule 17 (exp)]
    '>'       [reduce using rule 17 (exp)]
    '<'       [reduce using rule 17 (exp)]
    $default  reduce using rule 17 (exp)
